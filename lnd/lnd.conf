[Application Options]

# The directory that lnd stores all wallet, chain, and channel related data
datadir=/app/storage/lnd/data

# Allow push payments
accept-keysend=1

# Public network name
alias=${LND_ALIAS}

# Allow gift routes
allow-circular-route=1

# Public hex color
color=#0000FF

# Reduce the cooperative close chain fee
coop-close-target-confs=1000

# Log levels
debuglevel=CNCT=${LND_DEBUG_LEVEL},CRTR=${LND_DEBUG_LEVEL},HSWC=${LND_DEBUG_LEVEL},NTFN=${LND_DEBUG_LEVEL},RPCS=${LND_DEBUG_LEVEL}

# Public P2P IP (using TOR in Lagoon)
# externalip=INSTANCE_IP

# Mark unpayable, unpaid invoices as deleted
gc-canceled-invoices-on-startup=1
gc-canceled-invoices-on-the-fly=1

# Avoid historical graph data sync
ignore-historical-gossip-filters=1

# Listen (not using Tor? Remove this)
listen=localhost

# Set the maximum amount of commit fees in a channel
max-channel-fee-allocation=1.0

# Set the max timeout blocks of a payment
max-cltv-expiry=5000

# Allow commitment fee to rise on anchor channels
max-commit-fee-rate-anchors=100

# Pending channel limit
maxpendingchannels=10

# Min inbound channel limit
minchansize=100000

# gRPC socket binding
rpclisten=0.0.0.0:10009

# Avoid high startup overhead
stagger-initial-reconnect=1

# Delete and recreate RPC TLS certificate when details change or cert expires
tlsautorefresh=1

# Do not include IPs in the RPC TLS certificate
tlsdisableautofill=1

# Add DNS to the RPC TLS certificate
tlsextradomain=lnd

restlisten=${HOSTNAME}:8080
no-rest-tls=true

# The full path to a file (or pipe/device) that contains the password for unlocking the wallet
# Add this to the config file after you have created a wallet
wallet-unlock-password-file=/app/storage/walletpassword.txt

[Bitcoin]
# Turn on Bitcoin mode
bitcoin.active=1

# Set the channel confs to wait for channels
bitcoin.defaultchanconfs=2

# Forward fee rate in parts per million
bitcoin.feerate=1000

# Set bitcoin.testnet=1 or bitcoin.mainnet=1 as appropriate
bitcoin.${BITCOIN_NETWORK}=1

# Set the lower bound for HTLCs
bitcoin.minhtlc=1

# Set backing node, bitcoin.node=neutrino or bitcoin.node=bitcoind
bitcoin.node=${LND_BITCOIN_NODE:-bitcoind}

# Set CLTV forwarding delta time
bitcoin.timelockdelta=144

# The seed DNS server(s) to use for initial peer discovery. Must be specified as
# a '<primary_dns>[,<soa_primary_dns>]' tuple where the SOA address is needed
# for DNS resolution through Tor but is optional for clearnet users. Multiple
# tuples can be specified, will overwrite the default seed servers.
# The default seed servers are:
#  mainnet:
#    bitcoin.dnsseed=nodes.lightning.directory,soa.nodes.lightning.directory
#    bitcoin.dnsseed=lseed.bitcoinstats.com
#  testnet:
#    bitcoin.dnsseed=test.nodes.lightning.directory,soa.nodes.lightning.directory
#
# Example for custom DNS servers:
# bitcoin.dnsseed=seed1.test.lightning
# bitcoin.dnsseed=seed2.test.lightning,soa.seed2.test.lightning
# bitcoin.dnsseed=${LND_BITCOIN_DNSSEED:-}

[bitcoind]

# The host that your local bitcoind daemon is listening on. By default, this
# setting is assumed to be localhost with the default port for the current
# network.
bitcoind.rpchost=${LND_BITCOIND_RPCHOST:-bitcoind.us.crypsonite.io:8334}

# Username for RPC connections to bitcoind. By default, lnd will attempt to
# automatically obtain the credentials, so this likely won't need to be set
# (other than for a remote bitcoind instance).
bitcoind.rpcuser=${LND_BITCOIND_RPCUSER:-freedomtech}

# Password for RPC connections to bitcoind. By default, lnd will attempt to
# automatically obtain the credentials, so this likely won't need to be set
# (other than for a remote bitcoind instance).
bitcoind.rpcpass=${LND_BITCOIND_RPCPASS:-freedomtech}

# Use bitcoind's rpc interface to get block and transaction notifications
# instead of using the zmq interface. Only the rpcpolling option needs to
# be set in order to enable this, the rest of the options can be used to
# change the default values used for this configuration.
bitcoind.rpcpolling=true
bitcoind.blockpollinginterval=${LND_BITCOIND_BLOCKPOLLINGINTERVAL:-1m}
bitcoind.txpollinginterval=${LND_BITCOIND_TXPOLLINGINTERVAL:-30s}

[bolt]
# Enable database compaction when restarting
db.bolt.auto-compact=true

[db]
# Avoid watchtower specific data storage
db.no-rev-log-amt-data=true

[protocol]
# Enable large channels support
protocol.wumbo-channels=1

# Enable channel id hiding
protocol.option-scid-alias=true

[routerrpc]
# Set default chance of a hop success
routerrpc.apriori.hopprob=0.5

# Start to ignore nodes if they return many failures (set to 1 to turn off)
routerrpc.apriori.weight=0.75

# Set minimum desired savings of trying a cheaper path
routerrpc.attemptcost=10
routerrpc.attemptcostppm=10

# Set the number of historical routing records
routerrpc.maxmchistory=10000

# Set the min confidence in a path worth trying
routerrpc.minrtprob=0.005

# Set the time to forget past routing failures
routerrpc.apriori.penaltyhalflife=6h0m0s

[routing]
# Remove channels from graph that have one side that hasn't made announcements
routing.strictgraphpruning=1

[tor]
# Enable Tor if using
tor.active=1
tor.v3=1
tor.socks=tor:9050

# Enables Tor stream isolation, meaning each connection will use a separate Tor circuit
# This can prevent other Tor traffic from being mixed with LNDâ€™s Tor traffic
# Set this option to false if you have a lot of channels or
# prefer your channels to go online quickly, rather than privately
tor.streamisolation=false

# Allow the node to connect to non-onion services directly via clearnet. This
# allows the node operator to use direct connections to peers not running behind
# Tor, thus allowing lower latency and better connection stability.
# WARNING: This option will reveal the source IP address of the node, and should
# be used only if privacy is not a concern.
tor.skip-proxy-for-clearnet-targets=true

# Tor control password for service registration
tor.password=HideMeViaTor
tor.control=tor:9051

[rpcmiddleware]

# nable the RPC middleware interceptor functionality.
rpcmiddleware.enable=true

